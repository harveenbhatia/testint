{
  "name": "systemjs",
  "version": "0.16.6",
  "description": "System loader extension for flexible AMD & CommonJS support",
  "main": "dist/system.src.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/systemjs/systemjs.git"
  },
  "author": {
    "name": "Guy Bedford"
  },
  "license": "MIT",
  "dependencies": {
    "es6-module-loader": "git://github.com/bitovi/es6-module-loader.git#v0.16.3-bitovi.5"
  },
  "devDependencies": {
    "babel-core": "^4.7.16",
    "qunit": "^0.6.2",
    "uglify-js": "~2.4.13",
    "traceur": "0.0.87"
  },
  "scripts": {
    "test": "npm run test:babel && npm run test:traceur",
    "test:babel": "qunit -c s:./dist/system.js -t ./test/test-babel.js",
    "test:traceur": "qunit -c s:./dist/system.js -t ./test/test.js"
  },
  "gitHead": "383452810418aa12d1a784a43d3ea45c9eb58c49",
  "readme": "SystemJS\r\n========\r\n\r\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/systemjs/systemjs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n_For upgrading to SystemJS 0.16, see the [ES6 Module Loader 0.16 release upgrade notes for more information](https://github.com/ModuleLoader/es6-module-loader/releases/tag/v0.16.0), or read the updated [Getting Started](#getting-started) guide below._\r\n\r\nUniversal dynamic module loader - loads ES6 modules, AMD, CommonJS and global scripts in the browser and NodeJS. Works with both Traceur and Babel.\r\n\r\n* [Loads any module format](https://github.com/systemjs/systemjs/wiki/Module-Format-Support) with [exact circular reference and binding support](https://github.com/ModuleLoader/es6-module-loader/wiki/Circular-References-&-Bindings).\r\n* Loads [ES6 modules compiled into the `System.register` bundle format for production](https://github.com/systemjs/systemjs/wiki/Production-Workflows), maintaining circular references support.\r\n* Supports RequireJS-style [map](https://github.com/systemjs/systemjs/wiki/Map-Configuration), [paths](https://github.com/ModuleLoader/es6-module-loader/wiki/Configuring-the-Loader#paths-implementation), [bundles](https://github.com/systemjs/systemjs/wiki/Production-Workflows#bundle-extension) and [global shims](https://github.com/systemjs/systemjs/wiki/Module-Format-Support#globals-global).\r\n* [Loader plugins](#plugins) allow loading assets through the module naming system such as CSS, JSON or images.\r\n\r\nDesigned to work with the [ES6 Module Loader polyfill](https://github.com/ModuleLoader/es6-module-loader) (9KB) for a combined total footprint of 16KB minified and gzipped.\r\n\r\nRuns in IE8+ and NodeJS.\r\n\r\nFor discussion, [see the Google Group](https://groups.google.com/group/systemjs).\r\n\r\nFor a list of guides and tools, see the [community project page](https://github.com/systemjs/systemjs/wiki/Community-Projects).\r\n\r\nDocumentation\r\n---\r\n\r\n* [Basic Use](https://github.com/systemjs/systemjs/wiki/Basic-Use)\r\n* [Configuration Options](https://github.com/systemjs/systemjs/wiki/Configuration-Options)\r\n* [Loader Configuration](https://github.com/ModuleLoader/es6-module-loader/wiki/Configuring-the-Loader)\r\n* [Map Configuration](https://github.com/systemjs/systemjs/wiki/Map-Configuration)\r\n* [Meta Configuration](https://github.com/systemjs/systemjs/wiki/Meta-Configuration)\r\n* [Module Format Support](https://github.com/systemjs/systemjs/wiki/Module-Format-Support)\r\n* [Relative Dynamic Loading](https://github.com/systemjs/systemjs/wiki/Relative-Dynamic-Loading)\r\n* [Versions Extension](https://github.com/systemjs/systemjs/wiki/Versions-Extension)\r\n* [Production Workflows](https://github.com/systemjs/systemjs/wiki/Production-Workflows)\r\n* [Creating Plugins](https://github.com/systemjs/systemjs/wiki/Creating-a-Plugin)\r\n* [Creating a Custom Module Format](https://github.com/systemjs/systemjs/wiki/Creating-a-Custom-Format-Extension)\r\n\r\nGetting Started\r\n---\r\n\r\n### Browser Use\r\n\r\nDownload [`es6-module-loader.js`](https://github.com/ModuleLoader/es6-module-loader/blob/v0.16.0/dist/es6-module-loader.js) into the same folder as `system.js`.\r\n\r\nLoad SystemJS with a single script tag:\r\n\r\n```html\r\n<script src=\"system.js\"></script>\r\n```\r\n\r\nIt will then load `es6-module-loader.js` itself.\r\n\r\nTo load ES6, locate [`traceur.js`](https://raw.githubusercontent.com/jmcriffey/bower-traceur/0.0.87/traceur.js) in the baseURL path and it will be loaded when needed.\r\n\r\nFor use with Babel, locate the `browser.js` file at `babel.js` in the baseURL and set:\r\n\r\n```html\r\n<script>\r\n  System.transpiler = 'babel';\r\n</script>\r\n```\r\n\r\nAlternatively a custom path to Babel or Traceur can also be set through paths:\r\n\r\n```javascript\r\nSystem.config({\r\n  paths: {\r\n    traceur: 'path/to/traceur.js'\r\n  }\r\n});\r\n```\r\n\r\n### NodeJS Use\r\n\r\nTo load modules in NodeJS, install SystemJS with:\r\n\r\n```\r\n  npm install systemjs traceur\r\n```\r\n\r\n(making sure to also install Traceur or Babel as needed, as they are not included as dependencies as of SystemJS 0.16)\r\n\r\nWe can then load modules equivalently to in the browser:\r\n\r\n```javascript\r\nvar System = require('systemjs');\r\n\r\n/* \r\n * Include\r\n *   System.transpiler = 'babel';\r\n * to use Babel instead of Traceur\r\n */\r\n\r\n// loads './app.js' from the current directory\r\nSystem.import('./app').then(function(m) {\r\n  console.log(m);\r\n});\r\n```\r\n\r\nIf configuring the `baseURL` for use in Windows, prepend `file:` i.e.\r\n\r\n```javascipt\r\nSystem.config({\r\n baseURL: 'file:' + path.resolve('../path')\r\n});\r\n```\r\n\r\n### Plugins\r\n\r\nPlugins handle alternative loading scenarios, including loading assets such as CSS or images, and providing custom transpilation scenarios.\r\n\r\nSupported Plugins:\r\n\r\n* [CSS](https://github.com/systemjs/plugin-css) `System.import('my/file.css!')`\r\n* [Image](https://github.com/systemjs/plugin-image) `System.import('some/image.png!image')`\r\n* [JSON](https://github.com/systemjs/plugin-json) `System.import('some/data.json!').then(function(json){})`\r\n* [Text](https://github.com/systemjs/plugin-text) `System.import('some/text.txt!text').then(function(text) {})`\r\n\r\nAdditional Plugins:\r\n\r\n* [CoffeeScript](https://github.com/forresto/plugin-coffee) `System.import('./test.coffee!')`\r\n* [Jade](https://github.com/johnsoftek/plugin-jade)\r\n* [JSX](https://github.com/floatdrop/plugin-jsx) `System.import('template.jsx!')`\r\n* [Markdown](https://github.com/guybedford/plugin-md) `System.import('app/some/project/README.md!').then(function(html) {})`\r\n* [WebFont](https://github.com/guybedford/plugin-font) `System.import('google Port Lligat Slab, Droid Sans !font')`\r\n* [Ember Handlebars](https://github.com/n-fuse/plugin-ember-hbs) `System.import('template.hbs!')`\r\n\r\nPlugins are loaded from the module name of the extension. To set them up, you'll most likely want to add map configuration. For example:\r\n\r\n```javascript\r\nSystem.map['css'] = 'path/to/css/plugin';\r\n```\r\n\r\nLoading through plugin is indicated with `!` at the end of the name:\r\n\r\n```javascript\r\nSystem.import('file.css!');      // will use the \"css\" plugin, assumed from the extension\r\nSystem.import('file.css!text');  // will use the \"text\" plugin, instead of checking the extension\r\n```\r\n\r\n[Read the guide here on creating plugins](https://github.com/systemjs/systemjs/wiki/Creating-a-Plugin).\r\n\r\n#### Running the tests\r\n\r\nTo install the dependencies correctly, run `bower install` from the root of the repo, then open `test/test.html` in a browser with a local server\r\nor file access flags enabled.\r\n\r\nLicense\r\n---\r\n\r\nMIT\r\n\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/systemjs/systemjs/issues"
  },
  "homepage": "https://github.com/systemjs/systemjs#readme",
  "_id": "systemjs@0.16.6",
  "_shasum": "4a12e5a5baa1aab7fd2ad25d2aea512a2e7bddef",
  "_from": "git://github.com/bitovi/systemjs.git#0.16.6-bitovi.5",
  "_resolved": "git://github.com/bitovi/systemjs.git#383452810418aa12d1a784a43d3ea45c9eb58c49"
}
